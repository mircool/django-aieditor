name: Publish to PyPI

on:
  push:
    branches:
      - main  # main分支提交时触发
    tags:
      - 'v*'  # 推送tag时触发

permissions:
  contents: write  # 添加写入权限

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史以便检查tag
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build package
        run: python -m build
      
      - name: Get version
        id: get_version
        run: |
          VERSION=$(python setup.py --version)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Check if version exists
        id: check_version
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          if git tag | grep -q "v$VERSION"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Create and push tag
        if: |
          github.ref == 'refs/heads/main' &&
          steps.check_version.outputs.exists != 'true'
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -f "v$VERSION"
          git push origin "v$VERSION" -f
      
      - name: Publish to PyPI
        if: |
          (github.ref == 'refs/heads/main' && steps.check_version.outputs.exists != 'true') ||
          startsWith(github.ref, 'refs/tags/v')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*